version: "2"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data_2:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    expose:
      - "2181"
  kafka:
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9092"
      - "9093:9093"
    expose:
      - "9092"
      - "9093"
    volumes:
      - "kafka_data_2:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9093,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  kouncil:
    image: consdata/kouncil:latest
    ports:
      - "8080:8080"
    environment:
      - "bootstrapServers=kafka:9093"
    depends_on:
      - kafka
  validation:
    build:
      dockerfile: ./Validation.Dockerfile
    depends_on:
      - kafka
  users:
    build:
      dockerfile: ./Users.Dockerfile
    depends_on:
      - kafka
    ports:
      - "8001:8001"
  items:
    build:
      dockerfile: ./Items.Dockerfile
    depends_on:
      - kafka
    ports:
      - "8003:8003"
  orders:
    build:
      dockerfile: ./Orders.Dockerfile
    depends_on:
      - kafka
    ports:
      - "8000:8000"
  shipping:
    build:
      dockerfile: ./Shipping.Dockerfile
    depends_on:
      - kafka
    ports:
      - "8002:8002"

volumes:
  zookeeper_data_2:
    driver: local
  kafka_data_2:
    driver: local